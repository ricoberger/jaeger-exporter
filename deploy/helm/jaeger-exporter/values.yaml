nameOverride: ""
fullnameOverride: ""

## The number of Pods, which are created by the Deployment.
## See: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
##
replicaCount: 1

## Specify a list of image pull secrets, to avoid the DockerHub rate limit or to pull the jaeger-exporter image from a
## private registry.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []

## Set the image which should be used.
##
image:
  repository: ricoberger/jaeger-exporter
  pullPolicy: IfNotPresent
  tag: v0.2.0

## Specify additional annotations for the created Pods.
##
podAnnotations: {}

## Specify additional labels for the created Pods.
##
podLabels: {}

## Specify the command line arguments for the exporter.
##
args: []
  # - --exporter.deadlockInterval=300s
  # - --kafka.consumer.brokers=kafka-kafka-0.kafka-kafka-brokers.tracing.svc.cluster.local:9092,kafka-kafka-1.kafka-kafka-brokers.tracing.svc.cluster.local:9092,kafka-kafka-2.kafka-kafka-brokers.tracing.svc.cluster.local:9092
  # - --kafka.consumer.topic=jaeger-spans
  # - --log.format=json
  # - --log.level=debug

## Specify podDisruptionBudget settings for the jaeger-exporter.
## See: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
podDisruptionBudget: {}
  # maxUnavailable: 1

## Specify security settings for the created Pods. To set the security settings for the jaeger-exporter Container use
## the corresponding "securityContext" field.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
podSecurityContext: {}
  # fsGroup: 2000

## Specify security settings for the jaeger-exporter Container. They override settings made at the Pod level via the
## "podSecurityContext" when there is overlap.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## We usually recommend not to specify default resources and to leave this as a conscious choice for the user. This
## also increases chances charts run on environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary, and remove the curly braces after
## 'resources:'.
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Specify a map of key-value pairs, to configure livenessProbe.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
livenessProbe:
  failureThreshold: 10
  httpGet:
    path: /health
    port: http

## Specify a map of key-value pairs, to configure readinessProbe.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /health
    port: http

## Specify a map of key-value pairs, to assign the Pods to a specific set of nodes.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
##
nodeSelector: {}

## Specify the tolerations for the jaeger-exporter Pods.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
##
tolerations: []

## Specify a node affinity or inter-pod affinity / anti-affinity for an advanced scheduling of the jaeger-exporter Pods.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Specify additional labels for the created Service.
##
serviceLabels: {}

## Create a Service Monitor for the Prometheus Operator.
## See: https://github.com/coreos/prometheus-operator
##
serviceMonitor:
  enabled: false

  ## Interval at which metrics should be scraped. Fallback to the Prometheus default unless specified.
  ##
  # interval: 10s

  ## Timeout after which the scrape is ended. Fallback to the Prometheus default unless specified.
  ##
  # scrapeTimeout: 30s

  ## Additional labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
  ## See: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
  ##
  labels: {}

  ## HonorLabels chooses the metric's labels on collisions with target labels.
  ##
  honorLabels: true

  ## MetricRelabelConfigs to apply to samples before ingestion.
  ##
  metricRelabelings: []
    # - action: keep
    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
    #   sourceLabels: [__name__]

  ## RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds relabelings for a few
  ## standard Kubernetes fields and replaces original scrape job name with __tmp_prometheus_job_name.
  ##
  relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace

## Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
##
topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: jaeger-exporter
